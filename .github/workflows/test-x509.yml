name: X.509 Integration Tests

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'backend/src/x509/**'
      - 'backend/src/issuer/**'
      - 'backend/src/verifier/**'
      - 'backend/tests/test_x509*.py'
      - 'backend/tests/test_havid.py'
      - 'backend/tests/test_oid4vc_integration.py'
      - '.github/workflows/test-x509.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'backend/src/x509/**'
      - 'backend/src/issuer/**'
      - 'backend/src/verifier/**'
      - 'backend/tests/test_x509*.py'
      - 'backend/tests/test_havid.py'
      - 'backend/tests/test_oid4vc_integration.py'
      - '.github/workflows/test-x509.yml'
  workflow_dispatch:  # Allow manual triggering

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r backend/requirements.txt
        pip install pytest pytest-cov

    - name: Run core X.509 integration tests
      run: |
        cd backend
        python -m pytest tests/test_x509.py -v

    - name: Run X.509 end-to-end tests
      run: |
        cd backend
        python -m pytest tests/test_x509_e2e.py -v

    - name: Run HAVID compliance tests
      run: |
        cd backend
        python -m pytest tests/test_havid.py -v
      
    - name: Run OID4VC/OID4VP integration tests
      run: |
        cd backend
        python -m pytest tests/test_oid4vc_integration.py -v

    - name: Generate coverage report
      run: |
        cd backend
        python -m pytest tests/test_x509.py tests/test_x509_e2e.py tests/test_havid.py tests/test_oid4vc_integration.py \
          --cov=src.x509 --cov=src.verifier --cov=src.issuer \
          --cov-report=xml:coverage.xml \
          --cov-report=term

    - name: Upload coverage report
      uses: codecov/codecov-action@v3
      with:
        file: ./backend/coverage.xml
        flags: x509_integration
        name: x509-integration-codecov

    - name: Check security (Bandit)
      run: |
        pip install bandit
        bandit -r backend/src/x509 -f json -o bandit_report.json
      continue-on-error: true

    - name: Upload security report
      uses: actions/upload-artifact@v3
      with:
        name: security-report
        path: bandit_report.json 