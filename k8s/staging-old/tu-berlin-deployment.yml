apiVersion: v1
kind: Namespace
metadata:
  name: studentvc-staging
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: tu-berlin-config
  namespace: studentvc-staging
data:
  TENANT_NAME: "TU Berlin"
  SERVER_URL: "https://tu-berlin-staging.studentvc.org"
  ENVIRONMENT: "staging"
---
apiVersion: v1
kind: Secret
metadata:
  name: tu-berlin-secrets
  namespace: studentvc-staging
type: Opaque
data:
  # Base64 encoded secrets - replace with actual values
  DATABASE_URL: cG9zdGdyZXNxbDovL3VzZXI6cGFzc0BkYi9zdHVkZW50dmM=
  SECRET_KEY: c3VwZXItc2VjcmV0LWtleQ==
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tu-berlin-staging
  namespace: studentvc-staging
  labels:
    app: tu-berlin
    environment: staging
    university: tu-berlin
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: tu-berlin
      environment: staging
  template:
    metadata:
      labels:
        app: tu-berlin
        environment: staging
        university: tu-berlin
    spec:
      containers:
      - name: studentvc
        image: ghcr.io/pherbke/studentvc:${IMAGE_TAG}
        ports:
        - containerPort: 8080
          name: http
        envFrom:
        - configMapRef:
            name: tu-berlin-config
        - secretRef:
            name: tu-berlin-secrets
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: instance-storage
          mountPath: /src/instance
        - name: logs
          mountPath: /var/log/studentvc
      volumes:
      - name: instance-storage
        persistentVolumeClaim:
          claimName: tu-berlin-staging-pvc
      - name: logs
        emptyDir: {}
      imagePullSecrets:
      - name: ghcr-secret
---
apiVersion: v1
kind: Service
metadata:
  name: tu-berlin-staging-service
  namespace: studentvc-staging
spec:
  selector:
    app: tu-berlin
    environment: staging
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
    name: http
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: tu-berlin-staging-ingress
  namespace: studentvc-staging
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-staging"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "16m"
spec:
  tls:
  - hosts:
    - tu-berlin-staging.studentvc.org
    secretName: tu-berlin-staging-tls
  rules:
  - host: tu-berlin-staging.studentvc.org
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: tu-berlin-staging-service
            port:
              number: 80
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: tu-berlin-staging-pvc
  namespace: studentvc-staging
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: fast-ssd
  resources:
    requests:
      storage: 10Gi